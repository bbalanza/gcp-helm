stages:
  - pushToRegistry
  - deploy
    
pushToRegistry:
  stage: pushToRegistry
  image: 
    name: alpine/helm
    entrypoint: ["/bin/sh", "-c"]
  script:
    - echo "Packaging chart:"
    - helm package . -d ./out
    - echo "Authenticating Helm"
    - echo $GCP_SERVICE_KEY > gcloud-service-key.json 
    - cat gcloud-service-key.json | helm registry login -u _json_key --password-stdin https://us-central1-docker.pkg.dev
    - echo "Pushing to Artifact Registry"
    - helm push ./out/strapi-0.1.0.tgz oci://us-central1-docker.pkg.dev/$GCP_PROJECT_ID/sc-helm

deploy:
  stage: deploy
  image:
    name: ubuntu:20.04
    entrypoint: ["/bin/sh", "-c"]
  script:
    - echo "Installing Dependencies"
    - RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - && apt-get update -y && apt-get install google-cloud-sdk -y
    - curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get-helm-3 > get_helm.sh && chmod 700 get_helm.sh && ./get_helm.sh
    - echo "Deploying to GKE"
    - echo $GCP_SERVICE_KEY > gcloud-service-key.json 
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_PROJECT_ID 
    - gcloud container clusters get-credentials --zone us-central1-a sc-cluster
    - cat gcloud-service-key.json | helm registry login -u _json_key --password-stdin https://us-central1-docker.pkg.dev
    - helm install hello-chart oci://us-central1-docker.pkg.dev/$GCP_PROJECT_ID/sc-helm/strapi --version 0.1.0
